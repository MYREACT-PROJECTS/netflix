[{"C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\index.js":"1","C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\App.js":"2","C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\reportWebVitals.js":"3","C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\request.js":"4","C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\Row.js":"5","C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\axios.js":"6","C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\Banner.js":"7","C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\Navbar.js":"8","C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\Home.js":"9","C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\Login.js":"10","C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\SignScreen.js":"11","C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\firebase.js":"12","C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\UserSlice.js":"13","C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\Store.js":"14","C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\Profile.js":"15","C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\PlanScreen.js":"16"},{"size":670,"mtime":1612645179538,"results":"17","hashOfConfig":"18"},{"size":1220,"mtime":1612648975723,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":759,"mtime":1610997774690,"results":"21","hashOfConfig":"18"},{"size":2276,"mtime":1611072332891,"results":"22","hashOfConfig":"18"},{"size":190,"mtime":1610991844078,"results":"23","hashOfConfig":"18"},{"size":1570,"mtime":1611053195469,"results":"24","hashOfConfig":"18"},{"size":1177,"mtime":1612726081536,"results":"25","hashOfConfig":"18"},{"size":957,"mtime":1612618824154,"results":"26","hashOfConfig":"18"},{"size":1628,"mtime":1612633469887,"results":"27","hashOfConfig":"18"},{"size":1378,"mtime":1612637688711,"results":"28","hashOfConfig":"18"},{"size":638,"mtime":1612636088460,"results":"29","hashOfConfig":"18"},{"size":491,"mtime":1612644625512,"results":"30","hashOfConfig":"18"},{"size":182,"mtime":1612644510775,"results":"31","hashOfConfig":"18"},{"size":1322,"mtime":1612705034944,"results":"32","hashOfConfig":"18"},{"size":3624,"mtime":1612726672855,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"jpsl1d",{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},"C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\index.js",["71"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport createStore from './Store'\nimport configureStore from './Store'\n\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["72","73"],"C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\App.js",["74","75","76","77","78","79"],"import './App.css';\nimport React,{useRef,useEffect} from 'react'\nimport requests from './request'\nimport Row from './Row';\nimport Banner from './Banner'\nimport Navbar from './Navbar';\nimport {BrowserRouter as Router,Switch,Route} from \"react-router-dom\";\nimport Home from \"./Home\"\nimport Login from './Login';\nimport { auth,db } from \"./firebase\";\nimport {useDispatch,useSelector} from 'react-redux'\nimport { login, logout, selectUser } from './UserSlice';\nimport Profile from './Profile'\n\nfunction App() {\n\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n\n    const unsubscribe = auth.onAuthStateChanged(userAuth=>{\n      if(userAuth){\n        dispatch(login({\n          uid:userAuth.uid,\n          email:userAuth.email,\n          \n        }))\n\n\n      }\n      else{\n        dispatch(logout())\n\n      }\n    });\n   \n   \n    return unsubscribe;\n  }, [dispatch])\n\n\n  return (\n    <div className=\"app\">\n    <Router>\n      {!user ? ( \n        <Login/>\n      ):( \n    <Switch>\n      <Route   path exact=\"/\">\n    <Home/>\n    </Route>\n    <Route path=\"/profile\">\n       <Profile />\n    </Route>\n    </Switch>\n    )}\n    </Router>\n      \n    </div> \n    \n  )\n}\n\nexport default App;\n","C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\reportWebVitals.js",[],"C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\request.js",[],"C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\Row.js",[],"C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\axios.js",[],"C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\Banner.js",[],"C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\Navbar.js",[],"C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\Home.js",[],"C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\Login.js",[],"C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\SignScreen.js",["80"],"import React,{useRef} from 'react'\r\nimport \"./SignScreen.css\";\r\nimport { auth,db } from \"./firebase\";\r\n\r\nexport default function SignScreen() {\r\n    const emailRef = useRef(null);\r\n    const passwordRef=useRef(null);\r\n    const signIn=(e)=>{\r\n        e.preventDefault();\r\n        auth.signInWithEmailAndPassword(emailRef.current.value,passwordRef.current.value)\r\n        .then((authUser)=>{\r\n            console.log(authUser)\r\n        })\r\n        .catch((error)=> alert(error.message))\r\n    }\r\n    const register=(e)=>{\r\n        e.preventDefault();\r\n        auth.createUserWithEmailAndPassword(emailRef.current.value,passwordRef.current.value)\r\n        .then((authUser)=>{\r\n            console.log(authUser)\r\n        })\r\n        .catch((error)=> alert(error.message))\r\n    }\r\n\r\n    return (\r\n        <div className=\"signupScreen\">\r\n            <form>\r\n                <h1>Sign In</h1>\r\n                <input ref={emailRef} placeholder=\"Email\" type=\"email\"/>\r\n                <input ref={passwordRef} placeholder=\"password\" type=\"password\"/>\r\n                <button type=\"submit\" onClick={signIn}>Sign In</button>\r\n                <h4>\r\n                <span className=\"signupScreen__gray\">New to Netflix? </span>\r\n                 <span className=\"signupScreen__Link\" onClick={register}>Sign Up Now.</span>  </h4>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\firebase.js",[],"C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\UserSlice.js",[],"C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\Store.js",[],"C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\Profile.js",[],"C:\\Users\\DELL\\Downloads\\netflix-clone\\src\\PlanScreen.js",["81"],"import React,{useEffect,useState} from 'react'\r\nimport './PlanScreen.css'\r\nimport {db,auth} from \"./firebase\";\r\nimport { selectUser } from './UserSlice';\r\nimport {useSelector} from 'react-redux';\r\nimport {loadStripe} from '@stripe/stripe-js'\r\n\r\n\r\n\r\nexport default function PlanScreen() {\r\n    const [products,setProducts]= useState([])\r\n    const user =  useSelector(selectUser)\r\n    const[subscription,setSubscription]=useState();\r\n\r\n    useEffect(() => {\r\n     db.collection(\"customers\").doc(user.uid).collection('subscriptions').get()\r\n     .then(querySnapshot => {\r\n         querySnapshot.forEach(async subscription =>{\r\n             setSubscription({\r\n                 role:subscription.data().role,\r\n                 current_period_end:subscription.data().current_period_end.seconds,\r\n                 current_period_start:subscription.data().current_period_start.seconds,\r\n             })       \r\n\r\n         })\r\n     })\r\n        }, [user.uid])\r\n        console.log(subscription)\r\n    useEffect(() => {\r\n        db.collection('products')\r\n        .where('active',\"==\",true).get().then(querySnapshot => {\r\n            const products={};\r\n            querySnapshot.forEach(async (productDoc)=>{\r\n                products[productDoc.id]=productDoc.data();\r\n                const priceSnap = await productDoc.ref.collection('prices').get();\r\n                priceSnap.docs.forEach((price)=>{\r\n                    products[productDoc.id].prices={\r\n                        priceId: price.id,\r\n                        priceData:price.data(),\r\n                    };\r\n                });\r\n            });\r\n            setProducts(products)\r\n        })\r\n\r\n        \r\n    }, [])\r\n    console.log(products)\r\n    \r\nconst loadCheckout = async( priceId)=>{\r\n    console.log(priceId)\r\nconst docRef= await db\r\n.collection('customers')\r\n.doc(user.uid)\r\n.collection('checkout_sessions')\r\n.add\r\n({\r\n    price:priceId,\r\n    success_url:window.location.origin,\r\n    cancel_url:window.location.origin,\r\n})\r\n\r\ndocRef.onSnapshot(async(snap)=>{\r\n    const {error,sessionId}= snap.data();\r\n    if (error){\r\n        alert(`An error occured: ${error.message}` );\r\n            }\r\n\r\n            if (sessionId){\r\n                const stripe = await loadStripe(\"pk_test_51IIACABN9iw50N15Ba0Ka7tlmF66Syrr9S1eMiAHalRdPLYB1FdnOENB7yTFw5Dy2zpq0PK3B2vo8yIQY05Gjqmq00yopx8Trc\")\r\n                stripe.redirectToCheckout({sessionId});\r\n\r\n            }\r\n})\r\n    \r\n\r\n\r\n}\r\n\r\n    return (\r\n        <div className=\"planScreen\">\r\n            <br/>\r\n            {subscription && (<p> Renewal Date:{\" \"}{new Date(subscription?.current_period_end*1000).toLocaleDateString()} </p>)}\r\n            {Object.entries(products).map(([productId,productData])=>{\r\n                //to do ad some logic to ensure if user's subscribtuuion is active\r\n                const  isCurrentPackage = productData.name?.toLowerCase().includes(subscription?.role);\r\n                return(\r\n                    <div key={productId} className= {`planScreen__plan ${isCurrentPackage && \"planScreen__plan__disabled\"}`} >\r\n                        <div className=\"planScreen__info\">\r\n                            <h5>{productData.name}</h5>\r\n                            <div>\r\n                            <h6>{productData.description}</h6>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                        <button onClick={()=> !isCurrentPackage && loadCheckout(productData.prices.priceId)}>{isCurrentPackage ? \"Current Package\" : \"Subscribe\"}</button>\r\n\r\n\r\n                    </div>\r\n                )\r\n            })}\r\n            \r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"82","severity":1,"message":"83","line":7,"column":8,"nodeType":"84","messageId":"85","endLine":7,"endColumn":19},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"82","severity":1,"message":"90","line":2,"column":15,"nodeType":"84","messageId":"85","endLine":2,"endColumn":21},{"ruleId":"82","severity":1,"message":"91","line":3,"column":8,"nodeType":"84","messageId":"85","endLine":3,"endColumn":16},{"ruleId":"82","severity":1,"message":"92","line":4,"column":8,"nodeType":"84","messageId":"85","endLine":4,"endColumn":11},{"ruleId":"82","severity":1,"message":"93","line":5,"column":8,"nodeType":"84","messageId":"85","endLine":5,"endColumn":14},{"ruleId":"82","severity":1,"message":"94","line":6,"column":8,"nodeType":"84","messageId":"85","endLine":6,"endColumn":14},{"ruleId":"82","severity":1,"message":"95","line":10,"column":15,"nodeType":"84","messageId":"85","endLine":10,"endColumn":17},{"ruleId":"82","severity":1,"message":"95","line":3,"column":15,"nodeType":"84","messageId":"85","endLine":3,"endColumn":17},{"ruleId":"82","severity":1,"message":"96","line":3,"column":12,"nodeType":"84","messageId":"85","endLine":3,"endColumn":16},"no-unused-vars","'createStore' is defined but never used.","Identifier","unusedVar","no-native-reassign",["97"],"no-negated-in-lhs",["98"],"'useRef' is defined but never used.","'requests' is defined but never used.","'Row' is defined but never used.","'Banner' is defined but never used.","'Navbar' is defined but never used.","'db' is defined but never used.","'auth' is defined but never used.","no-global-assign","no-unsafe-negation"]